name: Plan and Apply IAC

on:  
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'master'

jobs:
  setup-and-plan:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest

    env: 
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      SSO_ROLE_NAME: ${{ secrets.AWS_SSO_ROLE_NAME }}
      SSO_START_URL: ${{ secrets.AWS_SSO_START_URL }}

    strategy:
      matrix:
        environment: [dev, stage, prod]
  
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          # Update package lists and install basic dependencies
          sudo apt-get update
          sudo apt-get install -y wget unzip jq

          # Install Terragrunt
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.10/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt -v

          # Install Chamber
          wget https://github.com/segmentio/chamber/releases/download/v2.10.4/chamber-v2.10.4-linux-amd64
          chmod +x chamber-v2.10.4-linux-amd64
          sudo mv chamber-v2.10.4-linux-amd64 /usr/local/bin/chamber
          chamber version

      - name: Configure & Login AWS SSO
        run: |
          mkdir -p ~/.aws
          echo "[profile sso-profile]" > ~/.aws/config
          echo "sso_start_url = ${{ secrets.AWS_SSO_START_URL }}" >> ~/.aws/config
          echo "sso_region = ${{ vars.AWS_REGION }} >> ~/.aws/config
          echo "sso_account_id = $ACCOUNT_ID" >> ~/.aws/config
          echo "sso_role_name = ${{ secrets.AWS_SSO_ROLE_NAME }}" >> ~/.aws/config
          echo "region = ${{ vars.AWS_REGION }}" >> ~/.aws/config
          aws sso login --profile sso-profile
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.TF_ROLE_ARN }}
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ env.ROLE_ARN }}
  
      - name: Source env vars using Chamber
        run: |
          eval $(chamber env ${{ matrix.environment }})
          echo "Environment variables loaded."

      - name: Run Terragrunt plan
        run: |
          cd environments/${{ matrix.environment }}
          terragrunt run-all plan -out=tfplan
          terragrunt show -json tfplan > plan_output.json

      - name: Upload plan output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: terragrunt-plan-output
          path: environments/$ENVIRONMENT/plan_output.json

  apply:
    if: github.event_name == 'pull_request' && contains(github.base_ref, 'refs/heads/master')
    runs-on: ubuntu-latest
    needs: setup-and-plan

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      SSO_ROLE_NAME: ${{ secrets.AWS_SSO_ROLE_NAME }}
      SSO_START_URL: ${{ secrets.AWS_SSO_START_URL }}

    strategy:
      matrix:
        environment: [dev, stage, prod]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          # Update package lists and install basic dependencies
          sudo apt-get update
          sudo apt-get install -y wget unzip jq

          # Install Terragrunt
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.45.10/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt -v

          # Install Chamber
          wget https://github.com/segmentio/chamber/releases/download/v2.10.4/chamber-v2.10.4-linux-amd64
          chmod +x chamber-v2.10.4-linux-amd64
          sudo mv chamber-v2.10.4-linux-amd64 /usr/local/bin/chamber
          chamber --version

      - name: Configure & Login AWS SSO
        run: |
          mkdir -p ~/.aws
          echo "[profile sso-profile]" > ~/.aws/config
          echo "sso_start_url = ${{ secrets.AWS_SSO_START_URL }}" >> ~/.aws/config
          echo "sso_region = ${{ vars.AWS_REGION }} >> ~/.aws/config
          echo "sso_account_id = $ACCOUNT_ID" >> ~/.aws/config
          echo "sso_role_name = ${{ secrets.AWS_SSO_ROLE_NAME }}" >> ~/.aws/config
          echo "region = ${{ vars.AWS_REGION }}" >> ~/.aws/config
          aws sso login --profile sso-profile
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.TF_ROLE_ARN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ env.ROLE_ARN }}

      - name: Source env vars using Chamber
        run: |
          eval $(chamber env ${{ matrix.environment }})
          echo "Environment variables loaded."

      - name: Download plan output artifact
        uses: actions/download-artifact@v4
        with:
          name: terragrunt-plan-output
          path: environments/$ENVIRONMENT

      - name: Run Terragrunt apply
        run: |
          cd environments/$ENVIRONMENT
          terragrunt run-all apply plan_output.json
