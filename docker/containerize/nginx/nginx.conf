user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

pid /var/run/nginx.pid;

events {

  worker_connections 4096;
}

http {

  upstream app {

    server 127.0.0.1:8000;
    server 0.0.0.0:8000;
    server containerize_app_1:8000;
  }

  ssl_certificate /etc/nginx/files/localhost.crt;
  ssl_certificate_key /etc/nginx/files/localhost.key;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:EECDH+CHACHA20:RSA:EECDH+3DES:RSA+3DES:!MD5:!SHA1:!SHA256:!SHA384;

  ssl_prefer_server_ciphers on;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-XSS-Protection "1; mode=block" always;

  add_header Public-Key-Pins 'pin-sha256="Jikr4xGOBBOPq1JelkhRAyQRdD/GvIBVajhNRo05XqI="; pin-sha256="47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU="; max-age=2592000; includeSubDomains';

  # HTTP redirect
  server {

    listen 80 default_server;

    server_name _; # Match any used hostname
    return 301 https://app$request_uri; # Redirect http to https

  }

  # SSL
  server {

    listen 443 ssl http2;

    server_name http://app;


    location / {

      proxy_pass http://app;

      # Headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Proxy cert settings
      proxy_ssl_trusted_certificate /etc/nginx/files/localhost.crt;
      proxy_ssl_certificate /etc/nginx/files/localhost.crt;
      proxy_ssl_certificate_key /etc/nginx/files/localhost.key;

      proxy_ssl_session_reuse on;

      # Protocols and Ciphers
      proxy_ssl_protocols SSLv2 TLSv1 TLSv1.1 TLSv1.2;
      proxy_ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    }
  }
}